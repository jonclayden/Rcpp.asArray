name: CI

on: [ push, pull_request ]

defaults:
  run:
    shell: bash

jobs:
  # This workflow contains a single job called "check"
  check:
    # Build and check on Linux and Windows
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    
    # The type of runner that this job runs on
    runs-on: ${{ matrix.os }}
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Check out code
      uses: actions/checkout@v3
    
    - name: Install and set up R
      uses: r-lib/actions/setup-r@v2
    
    - name: Parse and install dependencies
      run: |
        deps <- read.dcf("DESCRIPTION", c("Depends","Imports","LinkingTo","Suggests","Enhances"))
        deps <- na.omit(unlist(strsplit(deps, "\\s*,\\s*", perl=TRUE)))
        deps <- setdiff(unique(sub("\\s*\\([^\\)]+\\)\\s*$", "", deps, perl=TRUE)), c("R", rownames(installed.packages())))
        install.packages(deps)
      shell: Rscript {0}

    - name: Binary dependencies
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt install -y g++-12
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 60 --slave /usr/bin/g++ g++ /usr/bin/g++-12
      
    - name: Build package
      run: R CMD build .
    
    - name: Check package
      run: R CMD check --no-manual *tar.gz || { mv *.Rcheck Rcheck; false; }
    
    - name: Check client package
      run: |
        R CMD INSTALL *tar.gz
        R CMD build clients/array.test && R CMD check --no-manual array.test*tar.gz || { mv array.test*.Rcheck Rcheck; false; }
        R CMD build clients/span.test && R CMD check --no-manual span.test*tar.gz || { mv span.test*.Rcheck Rcheck; false; }
    
    # Upload the check directory as an artefact on failure
    - name: Upload check results
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-results
        path: Rcheck

